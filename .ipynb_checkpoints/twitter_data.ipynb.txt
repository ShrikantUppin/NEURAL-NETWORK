{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Twitter Scrapper..."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Import required libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "import re\n",
    "from getpass import getpass\n",
    "from time import sleep\n",
    "from selenium.webdriver.common.keys import Keys\n",
    "from selenium.common.exceptions import NoSuchElementException \n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "# Regular expressions to deal with text strings ect.\n",
    "\n",
    "# getpass() \n",
    "# '''getpass() prompts the user for a password without echoing. The getpass module provides a \n",
    "#    secure way to handle the password prompts where programs \n",
    "#    interact with the users via the terminal.'''\n",
    "\n",
    "# The sleep() function waits execution of the current thread for a given number of seconds.\n",
    "\n",
    "# selenium..\n",
    "# Selenium is a portable framework for testing web applications. Selenium provides a playback\n",
    "# ..tool for authoring functional tests without the need to learn a test scripting languageThe Keys \n",
    "# ...class provide keys in the keyboard like RETURN, F1, ALT etc.\n",
    "\n",
    "\n",
    "# NoSuchElementException is one of the different WebDriver Exceptions and this Exception occurs, \n",
    "# ..when the locators (i.e. id / xpath/ css selectors etc) we mentioned in the Selenium Program code \n",
    "# ...is unable to find the web element on the web page.'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "\n",
    "driver = webdriver.Chrome('C:/Users/SHRIKANT/Downloads/chromedriver.exe')\n",
    "\n",
    "driver = webdriver.Chrome('C:\\\\Users\\\\SHRIKANT\\\\Downloads\\\\chromedriver.exe')\n",
    "driver.get('https://www.twitter.com/login')\n",
    "\n",
    "# this will open twitter log in page in new window"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"https://github.com/ShrikantUppin/NLP/blob/main/twitter.png?raw=true\" width=\"500\" height=\"200\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "# login to your twitter account..!!\n",
    "\n",
    "# lets inspect username/email tag on twitter login by sending your mailid by this code\n",
    "#...the username/email will auto filled in twitter username\n",
    " \n",
    "# do insepct twitter password tag you get there session[username_or_email]\"]\n",
    "\n",
    "user_name = driver.find_element_by_xpath('//input[@name=\"session[username_or_email]\"]') \n",
    "user_name.send_keys('shrikantuppin@gmail.com')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"https://github.com/ShrikantUppin/NLP/blob/main/username.png?raw=true\" width=\"500\" height=\"200\">"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "········\n"
     ]
    }
   ],
   "source": [
    "# Since i am hiding my password from this jupyter notebook using getpass()\n",
    "#..so that no one can read my password..!\n",
    "\n",
    "my_password = getpass()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "# do insepct twitter password tag you get there [@name=\"session[password]\"]\n",
    "\n",
    "password = driver.find_element_by_xpath('//input[@name=\"session[password]\"]') \n",
    "password.send_keys(my_password)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"https://github.com/ShrikantUppin/NLP/blob/main/password.png?raw=true\" width=\"500\" height=\"200\">\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "# now autoclick on twitter login icon # this will same as clicking on login & return on same page\n",
    "\n",
    "password.send_keys(Keys.RETURN)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
